---
  #gather_facts: true
     - name: Update all packages to the latest version
       apt:
         upgrade: dist
     - name: Install list of packages
       apt: name={{item}} state=installed
       with_items:
       - mysql-server
       - php5-fpm
       - php5-curl
       - libssl-dev
       - python-pip
       - python-mysqldb
       - php5-gd
       - php5-mysql
       - nginx
       - php5-fpm
       - curl
       - drush
     - name: Update the repository cache and update package "certbot" to latest version using default release jessie-backport
       apt:
        name: certbot
        state: latest
        default_release: jessie-backports
        update_cache: yes

     - pip:
          name: MySQL-python
     
     - name: Copy the my conf for authentication
       copy: src=my.cnf dest=/root/.my.cnf
     
     - name: Copy nginx conf
       copy: src=nginx.conf dest=/etc/nginx/
     - stat:
         path: /etc/letsencrypt/live/{{ drupal_uri }}
       register: st

     - stat:
         path: /var/www/html/drupal
       register: drupalexist

     - name: Copy template nginx conf vhost
       template: src=devops.tk.conf.j2 dest=/etc/nginx/sites-enabled/{{ drupal_uri }}.conf
       notify: restart nginx

     - name: Change root user password on first run
       mysql_user: login_user=root
             login_password=''
             name=root
             password={{ mysql_root_password }}
             priv=*.*:ALL,GRANT
             host={{ item }}
       with_items:
         - 127.0.0.1
         - ::1
         - localhost
       when: drupalexist.stat.islnk is not defined
     - name: delete anonymous MySQL server user for {{ ansible_hostname }}
       action: mysql_user user="" host="{{ ansible_hostname }}" state="absent" 
 
     - name: delete anonymous MySQL server user for localhost
       action: mysql_user user="" state="absent"
 
     - name: remove the MySQL test database
       action: mysql_db db=test state=absent
     
     - name: Create drupal database user
       mysql_user: name={{ db_user }} password={{ db_password }} priv={{ db_name }}.*:ALL host=localhost state=present
     #when civicrm and automatic backup to AWS is required\/  
     #- name: Copy the drupal mysql db
     # copy: src=alldatabases.sql dest=/tmp
     #- name: Import DB 
     #  shell: mysql < /tmp/alldatabases.sql
 
     - name: Creates directory
       file: path={{ drupal_www_dir }} state=directory

     - name: Extract archive
       unarchive: src=drupal.zip
             dest={{ drupal_www_dir }}
             remote_src=no

     - name: Site Install with Drush
       command: |
         drush si standard --db-url=mysql://{{ db_user }}:{{ db_password }}@127.0.0.1:3306/{{ db_name }} --sites-subdir="{{ drupal_uri }}" -r {{ drupal_www_dir }} --account-name=admin --account-pass=admin123 -y
         chdir= {{ drupal_www_dir }}


     - name: Execute the command in remote shell create certs.
       shell: certbot certonly --webroot -w /var/www/html/{{ drupal_uri }} -d {{ drupal_uri }} -d www.{{ drupal_uri }}
       when: st.stat.islnk is not defined
